# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: CloudCV API
  description: Move your app forward with the Uber API
  version: "1.0.0"
# the domain of the service
host: api.cloudcv.io
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /image/analyze/dominantColors:
    get:
      summary: Analyze basic properties of the image
      description: |
        This endpoint can extract dominant colors from the image and return them 
        as a JSON response.
      parameters:
        - name: image
          in: query
          description: |
            Encoded image data. Currently we suport png, jpg, bmp formats. The image
            passed here MUST BE urlencoded. Enpoint will download it from specified 
            path and analyze.
          required: true
          type: string
      tags:
        - Image
        - ExternalSource
      responses:
        200:
          description: An array of products
          schema:
              $ref: '#/definitions/AnalyzeImageResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Analyze basic properties of the image
      consumes: "application/x-www-form-urlencoded"
      description: |
        This endpoint can extract dominant colors from the image and return them 
        as a JSON response.
      parameters:
        - name: image
          in: formData
          description: |
            Encoded image data. Currently we suport png, jpg, bmp formats.
          required: true
          type: file
      tags:
        - Image
        - UploadSource
      responses:
        200:
          description: Dominant colors and basic image properties.
          schema:
            $ref: '#/definitions/AnalyzeImageResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'            

definitions:
  Color:
    properties:
      red:
        type: integer
        format: int32
      green:
        type: integer
        format: int32
      blue:
        type: integer
        format: int32
      html:
        type: string
  DominantColor:
    properties:
      value: 
        schema:
          $ref: '#/definitions/Color' 
      amount:
        type: integer
        format: float
  DominantColors:
    type: array
    items:
        schema:
          $ref: '#/definitions/DominantColor' 
  AnalyzeImageResponse:
    properties:
      size:
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
      aspect:
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
      colors:
        schema:
          $ref: '#/definitions/DominantColors' 
  Error:
    properties:
      message:
        type: string
